{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.material.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/localstorage-service/cookie.service.ts","webpack:///./src/app/services/localstorage-service/index.ts","webpack:///./src/app/services/localstorage-service/localstorage.service.ts","webpack:///./src/app/services/localstorage-service/window-reference.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".example-card {\\n    max-width: 400px;\\n}\\n  \\n.example-header-image {\\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\n    background-size: cover;\\n}\\n  \\n.global-fab {\\n    position: fixed;\\n    bottom: 20px;\\n    right: 20px;\\n    z-index: 150;\\n}\\n  \\n.title{\\n    margin-top: -64px;\\n    color: white;\\n}\"","module.exports = \"<h1>{{test}}</h1>\\n<div fxLayout=\\\"row\\\"\\n     fxLayoutAlign=\\\"space-around center\\\">\\n    <div fxFlex\\n         *ngFor=\\\"let item of list\\\">\\n        <mat-card class=\\\"example-card\\\">\\n            <img mat-card-image\\n                 src=\\\"assets/mÃ¦rsk.jpg\\\"\\n                 alt=\\\"link to {{item.name}}\\\">\\n            <mat-card-header class=\\\"title\\\">\\n                <mat-card-title>{{item.name}}</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n            </mat-card-content>\\n            <mat-card-actions>\\n                <ng-container *ngFor=\\\"let element of item.urls\\\">\\n                    <a target=\\\"_blank\\\"\\n                       [href]=\\\"element.url\\\"\\n                       mat-button>{{element.label}}</a>\\n                </ng-container>\\n            </mat-card-actions>\\n        </mat-card>\\n    </div>\\n</div>\\n\\n\\n<a class=\\\"global-fab\\\"\\n   mat-fab\\n   color=\\\"primary\\\"\\n   matTooltip=\\\"Create New\\\"\\n   (click)=\\\"getTestFromLocalStorage()\\\"\\n   routerLinkActive=\\\"active\\\">\\n    <mat-icon>add</mat-icon>\\n</a>\"","import { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from './services/localstorage-service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  test = '';\n  list = [\n    {\n      name: 'DNET - VSTS',\n      image: 'https://cdn-images-1.medium.com/max/1200/1*J3uFALJExp_Uvp65B3xNrw.png',\n      urls: [\n        {\n          label: 'BUILDS',\n          url: 'https://transport-logistics.visualstudio.com/Dynamic%20Net/_build'\n\n        },\n        {\n          label: 'RELEASE',\n          url: 'https://transport-logistics.visualstudio.com/Dynamic%20Net/_releases2?definitionId=30&view=mine&_a=releases'\n\n        }\n      ]\n    },\n    {\n      name: 'DNET -JIRA BOARD',\n      image: 'https://atlassian.design/uploads/guidelines/brand/logos/logo-guideline-10@2x_170912_043411.png',\n      // tslint:disable-next-line:max-line-length\n      urls: [\n        {\n          label: 'CFO BOARD',\n          url: 'https://maersk-analytics.atlassian.net/secure/RapidBoard.jspa?rapidView=300&projectKey=DNO'\n        }\n      ]\n    },\n    {\n      name: 'DNET - CFO',\n      image: 'https://upload.wikimedia.org/wikipedia/commons/2/24/Elly_Maersk_%287099720969%29.jpg',\n      urls: [\n        {\n          label: 'DEV',\n          url: 'https://dev.dynamicnet.maersk.com/ui/preplanning/',\n\n        },\n        {\n          label: 'TEST',\n          url: 'https://test.dynamicnet.maersk.com/ui/preplanning/',\n\n        },\n        {\n          label: 'UFE',\n          url: 'https://dynamicnet.maersk.com/ui/preplanning/',\n\n        }\n      ]\n    }\n  ];\n  constructor(private localStorageService: LocalStorageService) {\n  }\n  ngOnInit(): void {\n    // this.localStorageService.setItem('bucket', 'Hallo');\n  }\n\n  getTestFromLocalStorage(): void {\n    this.test = this.localStorageService.getItem('bucket');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n} from '@angular/material';\n\n\n@NgModule({\n    exports: [\n        MatButtonModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatStepperModule,\n        MatExpansionModule\n    ]\n})\nexport class AppMaterialModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { AppMaterialModule } from './app.material.module';\nimport { LocalStorageService, CookieService, WindowRef } from './services/localstorage-service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    FlexLayoutModule,\n    AppMaterialModule\n  ],\n  providers: [\n    LocalStorageService,\n    CookieService,\n    WindowRef,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CookieService {\n    /**\n     * Helper method to update cookies\n     * @param key\n     * @param value\n     * @param expiration Expiration time defined in days (default: 30), if set to 0 a session cookie is created\n     */\n    updateCookie(key: string, value: string | null, expiration: number = 30): void {\n        let cookieDeclaration = `${key}=${value}; path=/; secure`;\n\n        if (expiration !== 0) {\n            const date = new Date();\n            date.setTime(date.getTime() + (expiration * 24 * 60 * 60 * 1000));\n            cookieDeclaration += `; expires=${date.toUTCString()}`;\n        }\n\n        document.cookie = cookieDeclaration;\n    }\n\n    /**\n     * @param key the desired key to be found\n     * @returns value of the desired key, or null if not found\n     */\n    readCookie(key: string): string {\n        const cookies = document.cookie.split('; ');\n        let value = '';\n\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].split('=');\n            if (cookie[0] === key) {\n                value = cookie[1];\n                break;\n            }\n        }\n\n        return value;\n    }\n}\n","export * from './cookie.service';\nexport * from './localstorage.service';\nexport * from './window-reference';\n","import { Injectable } from '@angular/core';\n\nimport { CookieService } from './cookie.service';\nimport { WindowRef } from './window-reference';\n\n@Injectable()\nexport class LocalStorageService {\n    private window: any;\n    private isSupported: boolean;\n    private readonly solutionKey = 'dynamicnet_preplanning';\n\n    constructor(\n        private cookieService: CookieService,\n        private windowRef: WindowRef,\n    ) {\n        this.window = windowRef.nativeWindow;\n        this.discoverSupport();\n    }\n\n    setItem<T>(key: string, item: T): void {\n        key = `${this.solutionKey}_${key}`;\n        const serializedValue = JSON.stringify(item);\n        if (this.isSupported) {\n            this.window.localStorage.setItem(key, serializedValue);\n        } else {\n            this.cookieService.updateCookie(key, serializedValue);\n        }\n    }\n\n    removeItem(key: string): void {\n        key = `${this.solutionKey}_${key}`;\n        if (this.isSupported) {\n            this.window.localStorage.removeItem(key);\n        } else {\n            this.cookieService.updateCookie(key, null, -1);\n        }\n    }\n\n    getItem<T>(key: string): T | null {\n        key = `${this.solutionKey}_${key}`;\n        let value: string;\n        if (this.isSupported) {\n            value = this.window.localStorage.getItem(key);\n        } else {\n            value = this.cookieService.readCookie(key);\n        }\n\n        return value ? JSON.parse(value) as T : null;\n    }\n\n    private discoverSupport(): void {\n        /* Primarily because of iOS private browsing mode, where localStorage\n        * exists but throws QuotaExceeded errors if you were to put something\n        * into localStorage\n        * Capability test from (modernizer) https://gist.github.com/paulirish/5558557\n        */\n        const capabilityDummy = 'web-storage_capability-test-key';\n\n        try {\n            localStorage.setItem(capabilityDummy, capabilityDummy);\n            localStorage.removeItem(capabilityDummy);\n            this.isSupported = true;\n        } catch (e) {\n            this.isSupported = false;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\n\nfunction _window(): any {\n    // return the global native browser window object\n    return window;\n}\n\n@Injectable()\nexport class WindowRef {\n    get nativeWindow(): any {\n        return _window();\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}